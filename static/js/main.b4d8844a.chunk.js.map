{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","className","map","tab","id","onClick","href","title","find","content","getContentById","App","useState","selectedTab","setSelectedTab","filter","item","length","ReactDOM","render","document","getElementById"],"mappings":"8KAQaA,EACT,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAKxB,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAACC,GAAD,OACR,oBACEF,UAAWD,IAAkBG,EAAIC,GAAK,YAAc,GACpD,UAAQ,MAFV,SAIE,mBACEC,QAAS,WACHL,IAAkBG,EAAIC,IACxBL,EAAcI,IAGlBG,KAAI,WAAMH,EAAIC,IACd,UAAQ,UAPV,SASGD,EAAII,iBAOf,qBAAKN,UAAU,QAAQ,UAAQ,aAA/B,SA7BmB,SAACG,GAAD,uBAAgBN,EAAKU,MAC1C,SAACL,GAAD,OAAcA,EAAIC,KAAOA,YADJ,aAAgB,EAEpCK,QA4BIC,CAAeV,SCjCbF,G,kBAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,iBAG7BE,EAAgB,WAC3B,MAAsCC,mBAAcd,EAAK,IAAzD,mBAAOe,EAAP,KAAoBC,EAApB,KAkBA,OACE,sBAAKb,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACqBY,EAAYN,SAEjC,cAAC,EAAD,CACET,KAAMA,EACNE,cAAea,EAAYT,GAC3BL,cAxBkB,SAACI,GACRA,EAAPC,KAEGS,EAAYT,KAIlBN,EAAKiB,QAAO,SAAAC,GAAI,OAAIA,EAAKZ,KAAOS,EAAYT,MAAIa,OAMrDH,EAAeX,GALbW,EAAehB,EAAK,YCrB1BoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b4d8844a.chunk.js","sourcesContent":["import { Tab } from '../../types';\n\ninterface TabsProps {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void,\n  selectedTabId: string\n}\n\nexport const Tabs: React.FC<TabsProps>\n  = ({ tabs, onTabSelected, selectedTabId }) => {\n    const getContentById = (id: string) => tabs.find(\n      (tab: Tab) => tab.id === id,\n    )?.content;\n\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab: Tab) => (\n              <li\n                className={selectedTabId === tab.id ? 'is-active' : ''}\n                data-cy=\"Tab\"\n              >\n                <a\n                  onClick={() => {\n                    if (selectedTabId !== tab.id) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {getContentById(selectedTabId)}\n        </div>\n      </div>\n    );\n  };\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState<Tab>(tabs[0]);\n\n  const handleSelectTab = (tab: Tab) => {\n    const { id } = tab;\n\n    if (id === selectedTab.id) {\n      return;\n    }\n\n    if (!tabs.filter(item => item.id === selectedTab.id).length) {\n      setSelectedTab(tabs[0]);\n\n      return;\n    }\n\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n       {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={handleSelectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}