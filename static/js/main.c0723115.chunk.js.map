{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","filteredTabs","map","tab","_index","arr","id","active","includes","className","onClick","href","title","find","content","getContentById","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"qLAWaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAMMC,EAAeH,EAAKI,KAAI,SAACC,EAAUC,EAAgBC,GACvD,OAAIF,EAAIG,KAAON,EACN,2BAAKG,GAAZ,IAAiBI,QAAQ,KAGrBT,EAAKI,KAAI,SAACC,GAAD,OAAcA,EAAIG,MAAIE,SAASR,KAC5CK,EAAI,GAAGE,QAAS,GAGXJ,MAGT,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGR,EAAaC,KAAI,SAACC,GAAD,OAChB,oBACEM,UAAWN,EAAII,OAAS,YAAc,GACtC,UAAQ,MAFV,SAIE,mBACEG,QAAS,WACHV,IAAkBG,EAAIG,IACxBP,EAAcI,IAGlBQ,KAAI,WAAMR,EAAIG,IACd,UAAQ,UAPV,SASGH,EAAIS,iBAOf,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,SAzCmB,SAACH,GAAD,aAAgB,UAAAR,EAAKe,MAC1C,SAACV,GAAD,OAAcA,EAAIG,KAAOA,YADY,eAEpCQ,UAAWhB,EAAK,GAAGgB,QAwCfC,CAAef,SCnDXF,G,kBAAO,CAClB,CAAEQ,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,iBAG7BE,EAAgB,WAC3B,MAAsCC,mBAAcnB,EAAK,IAAzD,mBAAOoB,EAAP,KAAoBC,EAApB,KAIA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBS,EAAYN,SAElC,cAAC,EAAD,CACEd,KAAMA,EACNE,cAAekB,EAAYZ,GAC3BP,cAVkB,SAACI,GAAD,OAAcgB,EAAehB,UCbvDiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c0723115.chunk.js","sourcesContent":["import { Tab } from '../../types';\n\ninterface TabsProps {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void,\n  selectedTabId: string\n}\n\n/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  onTabSelected,\n  selectedTabId,\n}) => {\n  const getContentById = (id: string) => tabs.find(\n    (tab: Tab) => tab.id === id,\n  )?.content || tabs[0].content;\n\n  const filteredTabs = tabs.map((tab: Tab, _index: number, arr) => {\n    if (tab.id === selectedTabId) {\n      return { ...tab, active: true };\n    }\n\n    if (!(tabs.map((tab: Tab) => tab.id).includes(selectedTabId))) {\n      arr[0].active = true;\n    }\n\n    return tab;\n  });\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {filteredTabs.map((tab: Tab) => (\n            <li\n              className={tab.active ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                onClick={() => {\n                  if (selectedTabId !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {getContentById(selectedTabId)}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState<Tab>(tabs[0]);\n\n  const handleSelectTab = (tab: Tab) => setSelectedTab(tab);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={handleSelectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}